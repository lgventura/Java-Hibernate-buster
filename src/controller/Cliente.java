package controller;
// Generated 17/11/2017 01:21:43 by Hibernate Tools 4.3.1


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;

/**
 * Cliente generated by hbm2java
 */
public class Cliente  implements java.io.Serializable {


     private Integer idCliente;
     private Pessoa pessoa;
     private int idade;
     private String sexo;
     private byte alergia;
     private String descricaoAlergia;
     private Set agendamentos = new HashSet(0);
     private Set tblAssocCliAgendas = new HashSet(0);
     private Set fichas = new HashSet(0);
     PreparedStatement pst;

    public Cliente() {
    }
    
    public String[] getCliente(){
        byte testeAlergia = 1;
        String alergia = "N達o";
        if(this.alergia == testeAlergia){
            alergia = "Sim";
        }else {
            alergia = "N達o";
        }
        
        return new String[]{
                pessoa.getNome(),
                pessoa.getCpfCnpj(),
                this.sexo,
                String.valueOf(this.idade),
                pessoa.getTelefone(),
                alergia,
                pessoa.getEndereco().getRua(),
                String.valueOf(pessoa.getEndereco().getNumero()),
                pessoa.getEndereco().getCidades().getNomeCidade(),
                pessoa.getEndereco().getCidades().getEstado().getSigla()
                
                
        };
    }

 public String[] getClienteAgenda(){
        byte testeAlergia = 1;
        String alergia = "N達o";
        if(this.alergia == testeAlergia){
            alergia = "Sim";
        }else {
            alergia = "N達o";
        }
        
        return new String[]{
                String.valueOf(idCliente),
                pessoa.getNome(),
                pessoa.getCpfCnpj(),
                pessoa.getTelefone(),
                alergia,
        };
    }
    
    public static Connection conectaBd(){
            try{

                Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto","root","");

                return conexao;
            }catch(SQLException erro){
                JOptionPane.showMessageDialog(null, erro);
                return null;
            }
    }
    
    public boolean excluir(int cod_ficha){
        String sql =" DELETE FROM tbl_assoc_tp_cabelo WHERE ficha_id_ficha = ?";
        
        try {
            pst = conectaBd().prepareStatement(sql);
            
            pst.setInt(1, cod_ficha);
            
            pst.execute();
            
            return true;
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, erro);
            return false;
        }
    }
    
    public boolean excluirS(int cod_ficha){
        String sql =" DELETE FROM tbl_assoc_saude WHERE ficha_id_ficha = ?";
        
        try {
            pst = conectaBd().prepareStatement(sql);
            
            pst.setInt(1, cod_ficha);
            
            pst.execute();
            
            return true;
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, erro);
            return false;
        }
    }
    
    public boolean excluirP(int cod_ficha){
        String sql =" DELETE FROM tbl_assoc_prod_casa WHERE ficha_id_ficha = ?";
        
        try {
            pst = conectaBd().prepareStatement(sql);
            
            pst.setInt(1, cod_ficha);
            
            pst.execute();
            
            return true;
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, erro);
            return false;
        }
    }
    
    public boolean excluirC(int cod_ficha){
        String sql =" DELETE FROM tbl_assoc_cor WHERE ficha_id_ficha = ?";
        
        try {
            pst = conectaBd().prepareStatement(sql);
            
            pst.setInt(1, cod_ficha);
            
            pst.execute();
            
            return true;
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, erro);
            return false;
        }
    }
    
    public boolean excluirFicha(int cod_ficha){
        String sql =" DELETE FROM ficha WHERE id_ficha = ?";
        
        try {
            pst = conectaBd().prepareStatement(sql);
            
            pst.setInt(1, cod_ficha);
            
            pst.execute();
            return true;
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, erro);
            return false;
        }
    }

	
    public Cliente(Pessoa pessoa, int idade, byte alergia) {
        this.pessoa = pessoa;
        this.idade = idade;
        this.alergia = alergia;
    }
    public Cliente(Pessoa pessoa, int idade, String sexo, byte alergia, String descricaoAlergia, Set agendamentos, Set tblAssocCliAgendas, Set fichas) {
       this.pessoa = pessoa;
       this.idade = idade;
       this.sexo = sexo;
       this.alergia = alergia;
       this.descricaoAlergia = descricaoAlergia;
       this.agendamentos = agendamentos;
       this.tblAssocCliAgendas = tblAssocCliAgendas;
       this.fichas = fichas;
    }
   
    public Integer getIdCliente() {
        return this.idCliente;
    }
    
    public void setIdCliente(Integer idCliente) {
        this.idCliente = idCliente;
    }
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
    public int getIdade() {
        return this.idade;
    }
    
    public void setIdade(int idade) {
        this.idade = idade;
    }
    public String getSexo() {
        return this.sexo;
    }
    
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }
    public byte getAlergia() {
        return this.alergia;
    }
    
    public void setAlergia(byte alergia) {
        this.alergia = alergia;
    }
    public String getDescricaoAlergia() {
        return this.descricaoAlergia;
    }
    
    public void setDescricaoAlergia(String descricaoAlergia) {
        this.descricaoAlergia = descricaoAlergia;
    }
    public Set getAgendamentos() {
        return this.agendamentos;
    }
    
    public void setAgendamentos(Set agendamentos) {
        this.agendamentos = agendamentos;
    }
    public Set getTblAssocCliAgendas() {
        return this.tblAssocCliAgendas;
    }
    
    public void setTblAssocCliAgendas(Set tblAssocCliAgendas) {
        this.tblAssocCliAgendas = tblAssocCliAgendas;
    }
    public Set getFichas() {
        return this.fichas;
    }
    
    public void setFichas(Set fichas) {
        this.fichas = fichas;
    }




}


